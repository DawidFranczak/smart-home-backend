from asgiref.sync import async_to_sync, sync_to_async
from channels.layers import get_channel_layer

from device.models import Device
from user.frontend_message_type import FrontendMessageType

@async_to_sync
async def send_to_device(router_mac: str, data: dict):
    await get_channel_layer().group_send(
        f"router_{router_mac}",
        {"type": "router_send", "data": data},
    )


def update_frontend_device_sync(device):
    from device.serializers.device import DeviceSerializer
    from channels.layers import get_channel_layer

    data = DeviceSerializer(device).data
    home_id = device.home.id

    async def send():
        await get_channel_layer().group_send(
            f"home_{home_id}",
            {
                "type": "send_to_frontend",
                "action": FrontendMessageType.UPDATE_DEVICE.value,
                "data": {"status": 200, "data": data},
            },
        )

    return send()
